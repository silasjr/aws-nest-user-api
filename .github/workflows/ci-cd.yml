name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-nodejs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Node.js APP
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: install dependency
        run: yarn install

      - name: run build
        run: yarn build

      - uses: actions/cache@v3
        id: app-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ./node_modules
            yarn.lock
            package.json
            Dockerfile
            ./dist
          key: ${{ runner.os }}-app
          restore-keys: |
            ${{ runner.os }}-app-
            ${{ runner.os }}-app

  build-docker-image:
    runs-on: ubuntu-latest
    needs: ['build-nodejs']
    steps:
      - name: Restore cache app
        uses: actions/cache@v2
        with:
          path: |
            ./node_modules
            yarn.lock
            package.json
            Dockerfile
            ./dist
          key: ${{ runner.os }}-app

      - name: listFiles
        run: ls -R

      - name: build docker image
        run: docker build -t user-api:latest .
